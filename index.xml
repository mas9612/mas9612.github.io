<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mas9612&#39;s note</title>
    <link>https://www.mas9612.net/</link>
    <description>Recent content on mas9612&#39;s note</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 15 May 2019 20:21:57 +0900</lastBuildDate>
    
	<atom:link href="https://www.mas9612.net/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>TCPについて学ぶ - HTTP通信の流れを見てみる</title>
      <link>https://www.mas9612.net/posts/dive-into-tcp-http/</link>
      <pubDate>Wed, 15 May 2019 20:21:57 +0900</pubDate>
      
      <guid>https://www.mas9612.net/posts/dive-into-tcp-http/</guid>
      <description>img { display: block; margin: 0 auto; } img.small { width: 100%; max-width: 350px !important; } TCPのコネクションが確立されてからクローズされるまでどのような流れで進んでいくのか，実際にパケットキャプチ</description>
    </item>
    
    <item>
      <title>雑なオレオレOAuth Serverを書いた</title>
      <link>https://www.mas9612.net/posts/authserver/</link>
      <pubDate>Sun, 21 Apr 2019 23:21:17 +0900</pubDate>
      
      <guid>https://www.mas9612.net/posts/authserver/</guid>
      <description>img { max-width: 50% !important; display: block; margin: 0 auto; } タイトルの通り． authserverというそのまんまな名前でGitHubにおいている． 自分で使う用としてとりあえず書い</description>
    </item>
    
    <item>
      <title>Linuxのプロセスについて</title>
      <link>https://www.mas9612.net/posts/linux-process/</link>
      <pubDate>Sat, 13 Apr 2019 22:38:11 +0900</pubDate>
      
      <guid>https://www.mas9612.net/posts/linux-process/</guid>
      <description>プロセスとは 一般的に，プロセスはプログラムの実行時におけるインスタンスであると定義されている． プロセスとは、情報処理においてプログラムの動作</description>
    </item>
    
    <item>
      <title>Linuxのロードアベレージについて</title>
      <link>https://www.mas9612.net/posts/linux-loadavg/</link>
      <pubDate>Tue, 02 Apr 2019 22:26:20 +0900</pubDate>
      
      <guid>https://www.mas9612.net/posts/linux-loadavg/</guid>
      <description>Linuxを使ってサーバ運用をしていると，ロードアベレージという単語をよく聞くかと思う． ふわっとした認識しかなかったので，改めて調査してみた</description>
    </item>
    
    <item>
      <title>プロミスキャスモード（Promiscuous Mode）</title>
      <link>https://www.mas9612.net/posts/promisc-mode/</link>
      <pubDate>Sat, 23 Mar 2019 22:18:44 +0900</pubDate>
      
      <guid>https://www.mas9612.net/posts/promisc-mode/</guid>
      <description>通常，NIC（Network Interface Card）は自分宛て（=自分のMACアドレス宛）のフレームと，ブロードキャスト・マルチキャストのフレームのみを</description>
    </item>
    
    <item>
      <title>Linux PAMについて</title>
      <link>https://www.mas9612.net/posts/linux-pam/</link>
      <pubDate>Sat, 02 Mar 2019 23:13:05 +0900</pubDate>
      
      <guid>https://www.mas9612.net/posts/linux-pam/</guid>
      <description>LDAPと連携させてLinuxサーバにログインしたいとき等，PAMの設定をいじることは今までにもあった． しかし，PAMについてしっかりと理解</description>
    </item>
    
    <item>
      <title>Linux Namespaces (1)</title>
      <link>https://www.mas9612.net/posts/linux-namespaces-01/</link>
      <pubDate>Mon, 18 Feb 2019 23:24:23 +0900</pubDate>
      
      <guid>https://www.mas9612.net/posts/linux-namespaces-01/</guid>
      <description>前回は chroot(2) について調査・テストしたので，今回はnamespacesについて勉強した． 少々長いので，2つの記事に分けて投稿する． 今回使った環境は</description>
    </item>
    
    <item>
      <title>chrootの基礎</title>
      <link>https://www.mas9612.net/posts/chroot-basic/</link>
      <pubDate>Tue, 12 Feb 2019 00:40:00 +0900</pubDate>
      
      <guid>https://www.mas9612.net/posts/chroot-basic/</guid>
      <description>DockerやKubernetesといったコンテナ関連の技術にはよくお世話になっているが，コンテナの実装やそれを実現している技術については深</description>
    </item>
    
    <item>
      <title>GoでのファイルI/O</title>
      <link>https://www.mas9612.net/posts/go-file-io/</link>
      <pubDate>Sun, 13 Jan 2019 00:00:00 +0900</pubDate>
      
      <guid>https://www.mas9612.net/posts/go-file-io/</guid>
      <description>GoでのファイルI/Oについて，改めてまとめた． いろいろな方法があるので，それぞれどういったものかを確認しながらまとめる． ファイルオープン 読</description>
    </item>
    
    <item>
      <title>Kubernetes Authentication</title>
      <link>https://www.mas9612.net/posts/k8s-auth/</link>
      <pubDate>Sun, 13 Jan 2019 00:00:00 +0900</pubDate>
      
      <guid>https://www.mas9612.net/posts/k8s-auth/</guid>
      <description>When we use Kubernetes API, the request is checked by following order after TLS is established[1].
 Authentication: Checked whether user is granted to access API Authorization: Checked whether user is granted to do requested action to specified object Admission Control: Modify or reject request  To test and study Kubernetes authentication flow, I was tested it with minikube.
Environment  Kubernetes cluster bootstrapped with minikube  $ kubectl version Client Version: version.</description>
    </item>
    
  </channel>
</rss>